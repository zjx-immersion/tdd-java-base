/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import org.junit.Test;

import java.util.LinkedList;

import static org.hamcrest.core.Is.is;
import static org.junit.Assert.*;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class LibraryTest {
    @Test
    public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }

    @Test
    public void testMockClass() throws Exception {
        // you can mock concrete classes, not only interfaces
        LinkedList mockedList = mock(LinkedList.class);

        // stubbing appears before the actual execution
        String value = "first";
        when(mockedList.get(0)).thenReturn(value);

        assertEquals(mockedList.get(0), value);

    }

    @Test
    public void should_get_3_when_input_1_and_2() throws Exception {
        //when
        int input1 = 1;
        int input2 = 2;
        //given
        Caculator caculator = new Caculator();
        int result = caculator.add(input1, input2);
        //then
        assertThat(result, is(3));

    }

}
